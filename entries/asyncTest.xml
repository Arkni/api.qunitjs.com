<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../entries2html.xsl" ?>
<entry type="method" name="asyncTest">
  <signature>
    <argument name="name" type="String">
      <desc>Title of unit being tested</desc>
    </argument>
    <argument name="expected" type="Number">
      <desc>Number of assertions in this test</desc>
    </argument>
    <argument name="test" type="Function">
      <desc>Function to close over assertions</desc>
    </argument>
  </signature>
  <desc>
    Add an asynchronous test to run. The test must include a call to start().
  </desc>
  <longdesc>
    <p>For testing asynchronous code, <code>asyncTest</code> will automatically stop the test runner and wait for your code to call <code>start()</code> to continue.</p>
  </longdesc>
  <example height="250">
    <desc>The following illustrates an asynchronous test that waits 1 second before resuming</desc>
<code><![CDATA[
asyncTest( "asynchronous test: one second later!", function() {
  expect( 1 );

  setTimeout(function() {
    ok( true, "Passed and ready to resume!" );
    start();
  }, 1000);
});
]]></code>
  </example>
  <example height="250">
    <desc>A more practical example that must wait for a video element to be loaded before running any assertions.</desc>
<code><![CDATA[
asyncTest( "asynchronous test: video ready to play", 1, function() {
  var $video = $( "video" );

  $video.on( "canplaythrough", function() {
    ok( true, "video has loaded and is ready to play" );
    start();
  });
});
]]></code>
  </example>


  <category slug="test"/>
</entry>
